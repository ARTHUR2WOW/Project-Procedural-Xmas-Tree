[gd_scene load_steps=16 format=2]

[ext_resource path="res://Scripts/TreeGeneration.gd" type="Script" id=1]
[ext_resource path="res://Scripts/CameraMovement.gd" type="Script" id=2]
[ext_resource path="res://Arts/Materials/GreenToy.tres" type="Material" id=3]
[ext_resource path="res://Arts/Materials/Floor.tres" type="Material" id=4]
[ext_resource path="res://Arts/Shaders/Tree.shader" type="Shader" id=6]
[ext_resource path="res://Arts/Materials/Gradient.jpg" type="Texture" id=7]

[sub_resource type="CapsuleMesh" id=1]

[sub_resource type="ShaderMaterial" id=2]
shader = ExtResource( 6 )
shader_param/albedo = Color( 0.654902, 0.745098, 0.521569, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.1
shader_param/roughness = 0.935
shader_param/point_size = 1.0
shader_param/rim = 0.79
shader_param/rim_tint = 1.0
shader_param/speed = 1.0
shader_param/minStrength = 0.02
shader_param/maxStrength = 0.2
shader_param/interval = 3.5
shader_param/detail = 1.0
shader_param/distortion = 1.0
shader_param/direction = Vector2( 1, 0 )
shader_param/heightOffset = 0.0
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
shader_param/texture_albedo = ExtResource( 7 )

[sub_resource type="Shader" id=3]
code = "shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_disabled,diffuse_lambert_wrap,specular_schlick_ggx;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform float rim : hint_range(0,1);
uniform float rim_tint : hint_range(0,1);
uniform sampler2D texture_rim : hint_white;

// Code by Maujoe - https://github.com/Maujoe/godot-simple-wind-shader
// under the MIT License
// Wind settings.
uniform float speed = 1.0;
uniform float minStrength : hint_range(0.0, 1.0);
uniform float maxStrength : hint_range(0.0, 1.0);
uniform float interval = 3.5;
uniform float detail = 1.0;
uniform float distortion : hint_range(0.0, 1.0);
uniform vec2 direction = vec2(1.0, 0.0);
uniform float heightOffset = 0.0;

// UV Uniforms must be after other uniforms because there is a bug with vec3. 
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

vec3 getWind(mat4 worldMatrix, vec3 vertex, float timer){
	vec4 pos = worldMatrix * mix(vec4(1.0), vec4(vertex, 1.0), distortion);
	float time = timer * speed + pos.x + pos.z;
	float diff = pow(maxStrength - minStrength, 2);
	float strength = clamp(minStrength + diff + sin(time / interval) * diff, minStrength, maxStrength);
	float wind = (sin(time) + cos(time * detail)) * strength * max(0.0, vertex.y - heightOffset);
	vec2 dir = normalize(direction);
	
	return vec3(wind * dir.x, 0.0, wind * dir.y);
	}


void vertex() {
	vec4 worldPos = WORLD_MATRIX * vec4(VERTEX, 1.0);
	worldPos.xyz += getWind(WORLD_MATRIX, VERTEX, TIME);
	//VERTEX = (INV_CAMERA_MATRIX * worldPos).xyz;
	VERTEX = (worldPos).xyz;
	NORMAL = (MODELVIEW_MATRIX * vec4(NORMAL, 0.0)).xyz;
	UV = UV * uv1_scale.xy + uv1_offset.xy;
}


void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
	vec2 rim_tex = texture(texture_rim,base_uv).xy;
	RIM = rim*rim_tex.x;	RIM_TINT = rim_tint*rim_tex.y;
}
"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/albedo = Color( 0.145098, 0.180392, 0.0823529, 1 )
shader_param/specular = null
shader_param/metallic = 0.1
shader_param/roughness = 0.806
shader_param/point_size = null
shader_param/rim = 0.678
shader_param/rim_tint = 1.0
shader_param/speed = 1.0
shader_param/minStrength = 0.02
shader_param/maxStrength = 0.2
shader_param/interval = 3.5
shader_param/detail = 1.0
shader_param/distortion = 1.0
shader_param/direction = Vector2( 1, 0 )
shader_param/heightOffset = 0.0
shader_param/uv1_scale = null
shader_param/uv1_offset = null
shader_param/uv2_scale = null
shader_param/uv2_offset = null

[sub_resource type="Animation" id=9]
resource_name = "spawn"
length = 0.5
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.05, 0.15, 0.3, 0.5 ),
"transitions": PoolRealArray( 2, 0.5, 2, 0.5, 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ), Vector3( 1.1, 1.1, 1.1 ), Vector3( 0.95, 0.95, 0.95 ), Vector3( 1.05, 1.05, 1.05 ), Vector3( 1, 1, 1 ) ]
}

[sub_resource type="CylinderMesh" id=5]
material = ExtResource( 4 )
top_radius = 10.0
bottom_radius = 10.0
height = 0.02

[sub_resource type="ProceduralSky" id=6]

[sub_resource type="Environment" id=7]
background_mode = 1
background_sky = SubResource( 6 )
background_color = Color( 0.513726, 0.686275, 0.694118, 1 )
ambient_light_color = Color( 0.290196, 0.372549, 0.388235, 1 )
glow_enabled = true

[sub_resource type="ParticlesMaterial" id=8]

[node name="Main" type="Node"]

[node name="Spatial" type="Spatial" parent="."]

[node name="CameraArm" type="Spatial" parent="Spatial"]
transform = Transform( 0.456461, 0, 0.889743, 0, 1, 0, -0.889743, 0, 0.456461, 0, 0, 0 )
script = ExtResource( 2 )

[node name="Camera" type="Camera" parent="Spatial/CameraArm"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 8.98315 )
current = true

[node name="Meshes" type="Spatial" parent="Spatial"]

[node name="MeshInstance" type="MeshInstance" parent="Spatial/Meshes"]
visible = false
mesh = SubResource( 1 )
material/0 = ExtResource( 3 )

[node name="Tree" type="MeshInstance" parent="Spatial/Meshes"]
transform = Transform( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0 )
material_override = SubResource( 2 )
script = ExtResource( 1 )

[node name="Stem" type="MeshInstance" parent="Spatial/Meshes/Tree"]
material_override = SubResource( 4 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="Spatial/Meshes/Tree"]
autoplay = "spawn"
anims/spawn = SubResource( 9 )

[node name="Floor" type="MeshInstance" parent="Spatial/Meshes"]
mesh = SubResource( 5 )
material/0 = null

[node name="WorldEnvironment" type="WorldEnvironment" parent="Spatial"]
environment = SubResource( 7 )

[node name="DirectionalLight" type="DirectionalLight" parent="Spatial"]
transform = Transform( 1, 0, 0, 0, 0.707106, 0.707107, 0, -0.707107, 0.707106, 0, 6.47772, 6.47802 )
shadow_enabled = true

[node name="Particles" type="Particles" parent="Spatial"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 7.0413, 0 )
visible = false
cast_shadow = 0
visibility_aabb = AABB( -10, -10, -10, 20, 20, 20 )
process_material = SubResource( 8 )

[node name="Control" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Generate" type="Button" parent="Control"]
margin_right = 189.0
margin_bottom = 88.0
text = "Generate"
__meta__ = {
"_edit_use_anchors_": false
}
[connection signal="tree_updated" from="Spatial/Meshes/Tree" to="Spatial/CameraArm" method="_on_GenerateMesh_tree_updated"]
[connection signal="pressed" from="Control/Generate" to="Spatial/Meshes/Tree" method="_on_Generate_pressed"]
